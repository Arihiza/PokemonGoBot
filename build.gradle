group 'ink.abb'
version '0.5.0-alpha4'

buildscript {
    ext.kotlin_version = '1.0.3'

    repositories {
        mavenCentral()
        maven { url "https://jitpack.io" }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'application'

mainClassName = 'ink.abb.pogo.scraper.MainKt'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
}

def generatedResourcesFolder = "$projectDir/build/resources/main"

sourceSets {
    main {
        kotlin {
            srcDir 'src/main/kotlin'
        }
        java {
            srcDir 'lib/com.google.guava'
        }
        resources.srcDirs generatedResourcesFolder
    }
}

dependencies {

    compile 'com.github.Grover-c13:PokeGOAPI-Java:0bf486e221'

    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "com.corundumstudio.socketio:netty-socketio:1.7.7"

    compile group: 'org.slf4j', name: 'slf4j-nop', version: '1.7.21'

    testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
}
task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'Pokemon Go Bot',
                'Implementation-Version': version,
                'Main-Class': mainClassName
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}
jar {
    manifest {
        attributes(
                'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
                'Main-Class': mainClassName
        )
    }
}
task createProperties(dependsOn: processResources) << {
    String versionDir = "$buildDir/resources/main/ink/abb/pogo/scraper"
    new File(versionDir).mkdirs()
    new File("$versionDir/version.properties").withWriter { w ->
        Properties p = new Properties()
        p['version'] = project.version.toString()
        p.store w, null
    }
}

classes {
    dependsOn createProperties
}

test {
    dependsOn createProperties
}